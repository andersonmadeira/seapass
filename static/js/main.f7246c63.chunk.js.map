{"version":3,"sources":["components/Home.js","components/EntryDetail.js","components/ScrollView.js","components/MenuEntry.js","components/MenuCategory.js","components/Sidebar.js","components/LocationHeader.js","components/NewEntry.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","EntryDetail","_ref","match","params","id","renderThumbVertical","className","style","backgroundColor","borderRadius","right","renderTrackVertical","position","width","bottom","top","ScrollView","props","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","rest","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","scrollTop","scrollHeight","clientHeight","handleUpdate","bind","assertThisInitialized","_this$state","shadowTopOpacity","Math","min","bottomScrollTop","shadowBottomOpacity","max","css","shadowTop","opacity","shadowBottom","_this2","_this$props","objectWithoutProperties","containerStyle","objectSpread","lib","assign","autoHide","autoHideTimeout","autoHideDuration","onUpdate","ref","c","left","height","background","Component","MenuEntry","entry","otherProps","menu","Item","react_router_dom","to","catId","icon","type","name","defaultProps","SubMenu","MenuCategory","category","isSubMenuOpen","handleSubMenuClicked","folderIcon","subItems","entries","map","key","title","onTitleClick","Sider","Sidebar","path","pathCategoryId","location","pathname","indexOf","parseInt","split","activeSubMenuKeys","onAddEntryClicked","setState","subMenuKey","prevState","push","splice","menuItems","console","log","items","cat","unshift","disabled","ScrollView_ScrollView","borderRight","padding","margin","es_button","onClick","size","block","selectedKeys","openKeys","mode","React","withRouter","LocationHeader","breadcrumb","NewEntry","Content","MenuItems","link","App","layout","components_Sidebar","minHeight","react_router","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7246c63.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Home() {\n  return (\n    <div>\n      <p>Home</p>\n    </div>\n  );\n}\n","/* eslint react/prop-types: 0 */\n\nimport React from 'react';\n\nexport default function EntryDetail({ match }) {\n  return (\n    <div>\n      <p>Entry Detail for: {match.params.id}</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { PropTypes } from 'prop-types';\nimport css from 'dom-css';\n\nfunction renderThumbVertical() {\n  const thumbStyle = {\n    backgroundColor: `#7AB6E7`,\n    borderRadius: '5px',\n    right: '0px',\n  };\n  return <div className=\"custom-thumb\" style={thumbStyle} />;\n}\n\nfunction renderTrackVertical() {\n  const trackStyle = {\n    position: 'absolute',\n    width: '6px',\n    right: '0px',\n    bottom: '0px',\n    top: '0px',\n  };\n  return <div className=\"custom-track\" style={trackStyle} />;\n}\n\nexport default class ScrollView extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      scrollTop: 0,\n      scrollHeight: 0,\n      clientHeight: 0,\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleUpdate() {\n    const { scrollTop, scrollHeight, clientHeight } = this.state;\n    const shadowTopOpacity = (1 / 20) * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const shadowBottomOpacity =\n      (1 / 20) * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    css(this.shadowTop, { opacity: shadowTopOpacity });\n    css(this.shadowBottom, { opacity: shadowBottomOpacity });\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n    const containerStyle = {\n      ...style,\n      position: 'relative',\n    };\n    const shadowTopStyle = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      height: 10,\n      background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\n    };\n    const shadowBottomStyle = {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      height: 10,\n      background: 'linear-gradient(to top, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\n    };\n    return (\n      <div style={containerStyle}>\n        <Scrollbars\n          autoHide\n          // * these are the default values\n          autoHideTimeout={1000} // *\n          autoHideDuration={200} // *\n          renderThumbVertical={renderThumbVertical}\n          renderTrackVertical={renderTrackVertical}\n          onUpdate={this.handleUpdate}\n          {...props}\n        />\n        <div\n          ref={c => {\n            this.shadowTop = c;\n          }}\n          style={shadowTopStyle}\n        />\n        <div\n          ref={c => {\n            this.shadowBottom = c;\n          }}\n          style={shadowBottomStyle}\n        />\n      </div>\n    );\n  }\n}\n\nScrollView.propTypes = {\n  style: PropTypes.shape({}),\n};\n\nScrollView.defaultProps = {\n  style: {},\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default function MenuEntry(props) {\n  const { entry, ...otherProps } = props;\n  return (\n    <Menu.Item {...otherProps}>\n      <NavLink to={`/entry/${entry.catId}/${entry.id}`}>\n        <Icon type=\"file-text\" /> {entry.name}\n      </NavLink>\n    </Menu.Item>\n  );\n}\n\nMenuEntry.propTypes = {\n  entry: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    catId: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport MenuEntry from './MenuEntry';\n\nconst { SubMenu } = Menu;\n\nexport default function MenuCategory(props) {\n  const { category, isSubMenuOpen, handleSubMenuClicked, ...otherProps } = props;\n  const folderIcon = isSubMenuOpen ? 'folder-open' : 'folder';\n  const subItems = category.entries.map(entry => {\n    return <MenuEntry key={`/entry/${entry.catId}/${entry.id}`} entry={entry} />;\n  });\n\n  return (\n    <SubMenu\n      title={\n        <span>\n          <Icon type={folderIcon} />\n          {category.name}\n        </span>\n      }\n      {...otherProps}\n      onTitleClick={() => handleSubMenuClicked(`c${category.id}`)}\n    >\n      {subItems}\n    </SubMenu>\n  );\n}\n\nMenuCategory.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        catId: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n  isSubMenuOpen: PropTypes.bool.isRequired,\n  handleSubMenuClicked: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport ScrollView from './ScrollView';\nimport MenuCategory from './MenuCategory';\n\nconst { Sider } = Layout;\n\nfunction getCategoryIdFromPath(path) {\n  return path.indexOf('entry') !== -1\n    ? parseInt(path.split('/')[[path.split('/').length - 2]], 10)\n    : 0;\n}\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const pathCategoryId = getCategoryIdFromPath(props.location.pathname);\n\n    this.state = {\n      activeSubMenuKeys: pathCategoryId !== 0 ? [`c${pathCategoryId}`] : [],\n    };\n\n    this.handleSubMenuClicked = this.handleSubMenuClicked.bind(this);\n    this.onAddEntryClicked = this.onAddEntryClicked.bind(this);\n  }\n\n  onAddEntryClicked() {\n    this.setState({ activeSubMenuKeys: [] });\n  }\n\n  handleSubMenuClicked(subMenuKey) {\n    this.setState(prevState => {\n      const { activeSubMenuKeys } = prevState;\n      const indexOf = activeSubMenuKeys.indexOf(subMenuKey);\n\n      if (indexOf === -1) {\n        activeSubMenuKeys.push(subMenuKey);\n      } else {\n        activeSubMenuKeys.splice(indexOf, 1);\n      }\n\n      return { activeSubMenuKeys };\n    });\n  }\n\n  render() {\n    const { activeSubMenuKeys } = this.state;\n    const { menuItems, location } = this.props;\n\n    console.log('activeSubMenuKeys', activeSubMenuKeys);\n\n    const items = menuItems.map(cat => {\n      const isSubMenuOpen = activeSubMenuKeys.indexOf(`c${cat.id}`) !== -1;\n\n      return (\n        <MenuCategory\n          key={`c${cat.id}`}\n          category={cat}\n          isSubMenuOpen={isSubMenuOpen}\n          handleSubMenuClicked={this.handleSubMenuClicked}\n        />\n      );\n    });\n\n    if (items.length === 0) {\n      items.unshift(\n        <Menu.Item disabled key=\"0\">\n          <Icon type=\"exclamation\" /> No entries found\n        </Menu.Item>\n      );\n    }\n\n    return (\n      <Sider className=\"sidebar\" width={250} style={{ background: '#fff' }}>\n        <ScrollView style={{ height: '100%', borderRight: 0 }}>\n          <div style={{ padding: 5, margin: 5 }}>\n            <Link to=\"/new\">\n              <Button onClick={this.onAddEntryClicked} type=\"dashed\" icon=\"plus\" size=\"small\" block>\n                Add New\n              </Button>\n            </Link>\n          </div>\n          <Menu\n            selectedKeys={[location.pathname]}\n            openKeys={activeSubMenuKeys}\n            style={{ borderRight: 0 }}\n            mode=\"inline\"\n          >\n            {items}\n          </Menu>\n        </ScrollView>\n      </Sider>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      entries: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          name: PropTypes.string.isRequired,\n          link: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ).isRequired,\n};\n\nexport default withRouter(Sidebar);\n","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nexport default function LocationHeader() {\n  return (\n    <Breadcrumb style={{ margin: '16px 0' }}>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item>Category</Breadcrumb.Item>\n      <Breadcrumb.Item>Entry</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n}\n","import React from 'react';\n\nexport default function NewEntry() {\n  return (\n    <div>\n      <p>New Entry</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Home, Sidebar, LocationHeader, EntryDetail, NewEntry } from './components';\n\nconst { Content } = Layout;\n\nconst MenuItems = [\n  {\n    id: 1,\n    name: 'CategoryOne',\n    entries: [\n      {\n        id: 1,\n        catId: 1,\n        name: 'EntryOne',\n        link: 'one',\n      },\n      {\n        id: 2,\n        catId: 1,\n        name: 'EntryTwo',\n        link: 'two',\n      },\n      {\n        id: 3,\n        catId: 1,\n        name: 'EntryThree',\n        link: 'three',\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: 'CategoryTwo',\n    entries: [\n      {\n        id: 4,\n        catId: 2,\n        name: 'EntryFour',\n        link: 'four',\n      },\n      {\n        id: 5,\n        catId: 2,\n        name: 'EntryFive',\n        link: 'five',\n      },\n      {\n        id: 6,\n        catId: 2,\n        name: 'EntrySix',\n        link: 'six',\n      },\n    ],\n  },\n  {\n    id: 3,\n    name: 'CategoryThree',\n    entries: [\n      {\n        id: 7,\n        catId: 3,\n        name: 'EntrySeven',\n        link: 'seven',\n      },\n      {\n        id: 8,\n        catId: 3,\n        name: 'EntryEight',\n        link: 'eight',\n      },\n      {\n        id: 9,\n        catId: 3,\n        name: 'EntryNine',\n        link: 'nine',\n      },\n    ],\n  },\n];\n\nfunction App() {\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }}>\n        <Sidebar menuItems={MenuItems} />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <LocationHeader />\n          <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/new\" component={NewEntry} />\n            <Route path=\"/entry/:cat/:id\" component={EntryDetail} />\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}