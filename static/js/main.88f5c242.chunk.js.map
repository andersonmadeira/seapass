{"version":3,"sources":["components/Home.js","components/EntryDetail.js","components/ScrollView.js","components/MenuEntry.js","components/MenuCategory.js","components/Sidebar.js","components/LocationHeader.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","EntryDetail","_ref","match","params","id","renderThumbVertical","className","style","backgroundColor","borderRadius","right","renderTrackVertical","position","width","bottom","top","ScrollView","props","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","rest","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","scrollTop","scrollHeight","clientHeight","handleUpdate","bind","assertThisInitialized","_this$state","shadowTopOpacity","Math","min","bottomScrollTop","shadowBottomOpacity","max","css","shadowTop","opacity","shadowBottom","_this2","_this$props","objectWithoutProperties","containerStyle","objectSpread","lib","assign","autoHide","autoHideTimeout","autoHideDuration","onUpdate","ref","c","left","height","background","Component","MenuEntry","entry","otherProps","menu","Item","key","react_router_dom","to","icon","type","name","defaultProps","SubMenu","MenuCategory","isOpen","handleTitleClick","setState","prevState","category","folderIcon","subItems","entries","map","sub","title","onTitleClick","Sider","Sidebar","items","menuItems","cat","MenuCategory_MenuCategory","unshift","disabled","ScrollView_ScrollView","borderRight","padding","margin","es_button","size","block","mode","defaultSelectedKeys","defaultOpenKeys","LocationHeader","breadcrumb","Content","MenuItems","link","App","layout","minHeight","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88f5c242.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Home() {\n  return (\n    <div>\n      <p>Home</p>\n    </div>\n  );\n}\n","/* eslint react/prop-types: 0 */\n\nimport React from 'react';\n\nexport default function EntryDetail({ match }) {\n  return (\n    <div>\n      <p>Entry Detail for: {match.params.id}</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { PropTypes } from 'prop-types';\nimport css from 'dom-css';\n\nfunction renderThumbVertical() {\n  const thumbStyle = {\n    backgroundColor: `#7AB6E7`,\n    borderRadius: '5px',\n    right: '0px',\n  };\n  return <div className=\"custom-thumb\" style={thumbStyle} />;\n}\n\nfunction renderTrackVertical() {\n  const trackStyle = {\n    position: 'absolute',\n    width: '6px',\n    right: '0px',\n    bottom: '0px',\n    top: '0px',\n  };\n  return <div className=\"custom-track\" style={trackStyle} />;\n}\n\nexport default class ScrollView extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      scrollTop: 0,\n      scrollHeight: 0,\n      clientHeight: 0,\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleUpdate() {\n    const { scrollTop, scrollHeight, clientHeight } = this.state;\n    const shadowTopOpacity = (1 / 20) * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const shadowBottomOpacity =\n      (1 / 20) * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    css(this.shadowTop, { opacity: shadowTopOpacity });\n    css(this.shadowBottom, { opacity: shadowBottomOpacity });\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n    const containerStyle = {\n      ...style,\n      position: 'relative',\n    };\n    const shadowTopStyle = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      height: 10,\n      background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\n    };\n    const shadowBottomStyle = {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      height: 10,\n      background: 'linear-gradient(to top, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%)',\n    };\n    return (\n      <div style={containerStyle}>\n        <Scrollbars\n          autoHide\n          // * these are the default values\n          autoHideTimeout={1000} // *\n          autoHideDuration={200} // *\n          renderThumbVertical={renderThumbVertical}\n          renderTrackVertical={renderTrackVertical}\n          onUpdate={this.handleUpdate}\n          {...props}\n        />\n        <div\n          ref={c => {\n            this.shadowTop = c;\n          }}\n          style={shadowTopStyle}\n        />\n        <div\n          ref={c => {\n            this.shadowBottom = c;\n          }}\n          style={shadowBottomStyle}\n        />\n      </div>\n    );\n  }\n}\n\nScrollView.propTypes = {\n  style: PropTypes.shape({}),\n};\n\nScrollView.defaultProps = {\n  style: {},\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function MenuEntry(props) {\n  const { entry, ...otherProps } = props;\n  return (\n    <Menu.Item key={entry.id} {...otherProps}>\n      <Link to={`/entry/${entry.id}`}>\n        <Icon type=\"file-text\" /> {entry.name}\n      </Link>\n    </Menu.Item>\n  );\n}\n\nMenuEntry.propTypes = {\n  entry: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport MenuEntry from './MenuEntry';\n\nconst { SubMenu } = Menu;\n\nexport default class MenuCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.handleTitleClick = this.handleTitleClick.bind(this);\n  }\n\n  handleTitleClick() {\n    this.setState(prevState => {\n      return {\n        isOpen: !prevState.isOpen,\n      };\n    });\n  }\n\n  render() {\n    const { category, ...otherProps } = this.props;\n    const { isOpen } = this.state;\n    const folderIcon = isOpen ? 'folder-open' : 'folder';\n    const subItems = category.entries.map(sub => {\n      return <MenuEntry key={sub.id} entry={sub} />;\n    });\n    return (\n      <SubMenu\n        key={category.id}\n        title={\n          <span>\n            <Icon type={folderIcon} />\n            {category.name}\n          </span>\n        }\n        {...otherProps}\n        onTitleClick={this.handleTitleClick}\n      >\n        {subItems}\n      </SubMenu>\n    );\n  }\n}\n\nMenuCategory.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n","import React from 'react';\nimport { Layout, Menu, Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport ScrollView from './ScrollView';\nimport MenuCategory from './MenuCategory';\n\nconst { Sider } = Layout;\n\nexport default function Sidebar(props) {\n  const { menuItems } = props;\n  const items = menuItems.map(cat => {\n    return <MenuCategory key={cat.id} category={cat} />;\n  });\n\n  if (items.length === 0) {\n    items.unshift(\n      <Menu.Item disabled key=\"key\">\n        <Icon type=\"exclamation\" /> No entries found\n      </Menu.Item>\n    );\n  }\n\n  return (\n    <Sider className=\"sidebar\" width={250} style={{ background: '#fff' }}>\n      <ScrollView style={{ height: '100%', borderRight: 0 }}>\n        <div style={{ padding: 5, margin: 5 }}>\n          <Button type=\"dashed\" icon=\"plus\" size=\"small\" block>\n            Add New\n          </Button>\n        </div>\n        <Menu\n          style={{ borderRight: 0 }}\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n        >\n          {items}\n        </Menu>\n      </ScrollView>\n    </Sider>\n  );\n}\n\nSidebar.propTypes = {\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      entries: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          name: PropTypes.string.isRequired,\n          link: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ).isRequired,\n};\n","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nexport default function LocationHeader() {\n  return (\n    <Breadcrumb style={{ margin: '16px 0' }}>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item>Category</Breadcrumb.Item>\n      <Breadcrumb.Item>Entry</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n}\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Home, Sidebar, LocationHeader, EntryDetail } from './components';\n\nconst { Content } = Layout;\n\nconst MenuItems = [\n  {\n    id: 11,\n    name: 'CategoryOne',\n    entries: [\n      {\n        id: 1,\n        name: 'EntryOne',\n        link: 'one',\n      },\n      {\n        id: 2,\n        name: 'EntryTwo',\n        link: 'two',\n      },\n      {\n        id: 3,\n        name: 'EntryThree',\n        link: 'three',\n      },\n    ],\n  },\n  {\n    id: 22,\n    name: 'CategoryTwo',\n    entries: [\n      {\n        id: 4,\n        name: 'EntryFour',\n        link: 'four',\n      },\n      {\n        id: 5,\n        name: 'EntryFive',\n        link: 'five',\n      },\n      {\n        id: 6,\n        name: 'EntrySix',\n        link: 'six',\n      },\n    ],\n  },\n  {\n    id: 33,\n    name: 'CategoryThree',\n    entries: [\n      {\n        id: 7,\n        name: 'EntrySeven',\n        link: 'seven',\n      },\n      {\n        id: 8,\n        name: 'EntryEight',\n        link: 'eight',\n      },\n      {\n        id: 9,\n        name: 'EntryNine',\n        link: 'nine',\n      },\n    ],\n  },\n];\n\nfunction App() {\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }}>\n        <Sidebar menuItems={MenuItems} />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <LocationHeader />\n          <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/entry/:id\" component={EntryDetail} />\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}