{"version":3,"sources":["components/Home.js","database/index.js","components/EntryForm.js","components/EntryDetail.js","components/ScrollView.js","components/MenuEntry.js","components/MenuCategory.js","actions/actionTypes.js","actions/index.js","util/index.js","components/Sidebar.js","components/LocationHeader.js","components/NewEntry.js","components/NotFound.js","App.js","serviceWorker.js","reducers/activeEntryReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Home","react_default","a","createElement","adapter","LocalStorage","db","low","getEntryById","entryId","entId","parseInt","get","find","id","value","defaults","categories","name","entries","catId","data","user","pass","host","extra","write","EntryForm","handleSubmit","e","preventDefault","_this$props","_this","props","form","entry","validateFields","err","values","console","log","assign","updateEntry","Object","objectSpread","_this$props2","this","getFieldDecorator","es_form","onSubmit","className","style","maxWidth","Item","marginBottom","initialValue","rules","required","message","input","prefix","icon","type","color","placeholder","es_button","htmlType","React","Component","components_EntryForm","create","EntryDetail","_ref","match","params","renderThumbVertical","backgroundColor","borderRadius","right","renderTrackVertical","position","width","bottom","top","ScrollView","children","otherProps","objectWithoutProperties","lib","autoHide","autoHideTimeout","autoHideDuration","MenuEntry","menu","react_router_dom","to","concat","defaultProps","SubMenu","MenuCategory","category","isSubMenuOpen","handleSubMenuClicked","folderIcon","subItems","categoryId","filter","getEntriesByCategoryId","map","key","title","onTitleClick","setActiveEntry","getEntryIdFromPath","path","indexOf","split","length","Sider","Sidebar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","item","location","pathname","state","activeSubMenuKeys","undefined","bind","assertThisInitialized","onAddEntryClicked","setState","subMenuKey","prevState","push","splice","_this2","updateActiveEntry","items","cat","unshift","disabled","background","height","borderRight","padding","margin","onClick","size","block","selectedKeys","openKeys","mode","connect","store","activeEntryId","activeEntry","dispatch","bindActionCreators","withRouter","getItems","getCategoryById","breadcrumb","LocationHeader","NewEntry","NotFound","Content","App","layout","components_Sidebar","components_LocationHeader","minHeight","react_router","exact","component","Boolean","window","hostname","initialState","activeEntryReducer","arguments","action","Reducers","combineReducers","Store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10e80e0f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Home() {\n  return (\n    <div>\n      <p>Home</p>\n    </div>\n  );\n}\n","import low from 'lowdb';\nimport LocalStorage from 'lowdb/adapters/LocalStorage';\n\nconst adapter = new LocalStorage('db');\nconst db = low(adapter);\n\ndb.defaults({\n  categories: [\n    {\n      id: 1,\n      name: 'CategoryOne',\n    },\n    {\n      id: 2,\n      name: 'CategoryTwo',\n    },\n    {\n      id: 3,\n      name: 'CategoryThree',\n    },\n  ],\n  entries: [\n    {\n      id: 1,\n      catId: 1,\n      name: 'EntryOne',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 2,\n      catId: 1,\n      name: 'EntryTwo',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 3,\n      catId: 1,\n      name: 'EntryThree',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 4,\n      catId: 2,\n      name: 'EntryFour',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 5,\n      catId: 2,\n      name: 'EntryFive',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 6,\n      catId: 2,\n      name: 'EntrySix',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 7,\n      catId: 3,\n      name: 'EntrySeven',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 8,\n      catId: 3,\n      name: 'EntryEight',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n    {\n      id: 9,\n      catId: 3,\n      name: 'EntryNine',\n      data: {\n        user: 'user',\n        pass: 'pass',\n        host: 'host',\n      },\n      extra: [],\n    },\n  ],\n}).write();\n\nexport function getCategories() {\n  return db.get('categories').value();\n}\n\nexport function getEntries() {\n  return db.get('entries').value();\n}\n\nexport function getEntryById(entryId) {\n  const entId = parseInt(entryId, 10);\n  const entry = db.get('entries').find({ id: entId });\n  return entry.value();\n}\n\nexport function getCategoryById(categoryId) {\n  const catId = parseInt(categoryId, 10);\n  const cat = db.get('categories').find({ id: catId });\n  return cat.value();\n}\n\nexport function getEntriesByCategoryId(categoryId) {\n  const catId = parseInt(categoryId, 10);\n  const entries = db.get('entries').filter({ catId });\n  return entries.value();\n}\n\nexport function updateEntry(entry) {\n  db.get('entries')\n    .find({ id: entry.id })\n    .assign({\n      catId: entry.catId,\n      name: entry.name,\n      data: entry.data,\n      extra: entry.extra,\n    })\n    .write();\n}\n","import React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { updateEntry } from '../database';\n\nclass EntryForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    const { form, entry } = this.props;\n    form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        updateEntry({ ...entry, data: values });\n      }\n    });\n  };\n\n  render() {\n    const { form, entry } = this.props;\n    const { getFieldDecorator } = form;\n\n    console.log('entry: ', entry);\n\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{ maxWidth: '400px' }}>\n        <Form.Item style={{ marginBottom: 0 }}>\n          {getFieldDecorator('host', {\n            initialValue: entry.data.host,\n            rules: [{ required: true, message: 'Please input the hostname!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"link\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"text\"\n              placeholder=\"Hostname\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item style={{ marginBottom: 0 }}>\n          {getFieldDecorator('user', {\n            initialValue: entry.data.user,\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item style={{ marginBottom: 0 }}>\n          {getFieldDecorator('pass', {\n            initialValue: entry.data.pass,\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"save-form-button\">\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create({ name: 'normal_login' })(EntryForm);\n","import React from 'react';\nimport EntryForm from './EntryForm';\nimport { getEntryById } from '../database';\n\nexport default function EntryDetail({ match }) {\n  const { entryId } = match.params;\n  const entry = getEntryById(entryId);\n  return (\n    <div>\n      <h3>{entry.name}</h3>\n      <EntryForm entry={entry} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { PropTypes } from 'prop-types';\n\nfunction renderThumbVertical() {\n  const thumbStyle = {\n    backgroundColor: `#7AB6E7`,\n    borderRadius: '5px',\n    right: '0px',\n  };\n  return <div className=\"custom-thumb\" style={thumbStyle} />;\n}\n\nfunction renderTrackVertical() {\n  const trackStyle = {\n    position: 'absolute',\n    width: '6px',\n    right: '0px',\n    bottom: '0px',\n    top: '0px',\n  };\n  return <div className=\"custom-track\" style={trackStyle} />;\n}\n\nexport default function ScrollView(props) {\n  const { style, children, ...otherProps } = props;\n\n  return (\n    <div style={style}>\n      <Scrollbars\n        autoHide\n        // * these are the default values\n        autoHideTimeout={1000} // *\n        autoHideDuration={200} // *\n        renderThumbVertical={renderThumbVertical}\n        renderTrackVertical={renderTrackVertical}\n        {...otherProps}\n      >\n        {children}\n      </Scrollbars>\n    </div>\n  );\n}\n\nScrollView.propTypes = {\n  style: PropTypes.shape({}),\n};\n\nScrollView.defaultProps = {\n  style: {},\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default function MenuEntry(props) {\n  const { entry, ...otherProps } = props;\n  return (\n    <Menu.Item {...otherProps}>\n      <NavLink to={`/entry/${entry.id}`}>\n        <Icon type=\"file-text\" /> {entry.name}\n      </NavLink>\n    </Menu.Item>\n  );\n}\n\nMenuEntry.propTypes = {\n  entry: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    catId: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport MenuEntry from './MenuEntry';\nimport { getEntriesByCategoryId } from '../database';\n\nconst { SubMenu } = Menu;\n\nexport default function MenuCategory(props) {\n  const { category, isSubMenuOpen, handleSubMenuClicked, ...otherProps } = props;\n  const folderIcon = isSubMenuOpen ? 'folder-open' : 'folder';\n  const subItems = getEntriesByCategoryId(category.id).map(entry => {\n    return <MenuEntry key={`/entry/${entry.id}`} entry={entry} />;\n  });\n\n  return (\n    <SubMenu\n      title={\n        <span>\n          <Icon type={folderIcon} />\n          {category.name}\n        </span>\n      }\n      {...otherProps}\n      onTitleClick={() => handleSubMenuClicked(`c${category.id}`)}\n    >\n      {subItems}\n    </SubMenu>\n  );\n}\n\nMenuCategory.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        catId: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n  isSubMenuOpen: PropTypes.bool.isRequired,\n  handleSubMenuClicked: PropTypes.func.isRequired,\n};\n","export const UPDATE_ACTIVE_ENTRY = 'UPDATE_ACTIVE_ENTRY';\n","import { UPDATE_ACTIVE_ENTRY } from './actionTypes';\n\nexport const setActiveEntry = value => ({\n  type: UPDATE_ACTIVE_ENTRY,\n  entryId: value,\n});\n","export function getEntryIdFromPath(path) {\n  return path.indexOf('entry') !== -1\n    ? parseInt(path.split('/')[[path.split('/').length - 1]], 10)\n    : 0;\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ScrollView from './ScrollView';\nimport MenuCategory from './MenuCategory';\nimport { getCategories, getEntryById } from '../database';\nimport { setActiveEntry } from '../actions';\nimport { getEntryIdFromPath } from '../util';\n\nconst { Sider } = Layout;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const pathEntryId = getEntryIdFromPath(props.location.pathname);\n    const item = getEntryById(pathEntryId);\n\n    this.state = {\n      activeSubMenuKeys: item !== undefined ? [`c${item.catId}`] : [],\n    };\n\n    this.handleSubMenuClicked = this.handleSubMenuClicked.bind(this);\n    this.onAddEntryClicked = this.onAddEntryClicked.bind(this);\n  }\n\n  componentWillMount() {\n    this.categories = getCategories();\n  }\n\n  onAddEntryClicked() {\n    this.setState({ activeSubMenuKeys: [] });\n  }\n\n  handleSubMenuClicked(subMenuKey) {\n    this.setState(prevState => {\n      const { activeSubMenuKeys } = prevState;\n      const indexOf = activeSubMenuKeys.indexOf(subMenuKey);\n\n      if (indexOf === -1) {\n        activeSubMenuKeys.push(subMenuKey);\n      } else {\n        activeSubMenuKeys.splice(indexOf, 1);\n      }\n\n      return { activeSubMenuKeys };\n    });\n  }\n\n  render() {\n    const { activeSubMenuKeys } = this.state;\n    const { location, updateActiveEntry } = this.props;\n\n    const items = this.categories.map(cat => {\n      const isSubMenuOpen = activeSubMenuKeys.indexOf(`c${cat.id}`) !== -1;\n\n      return (\n        <MenuCategory\n          key={`c${cat.id}`}\n          category={cat}\n          isSubMenuOpen={isSubMenuOpen}\n          handleSubMenuClicked={this.handleSubMenuClicked}\n        />\n      );\n    });\n\n    if (items.length === 0) {\n      items.unshift(\n        <Menu.Item disabled key=\"0\">\n          <Icon type=\"exclamation\" /> No entries found\n        </Menu.Item>\n      );\n    }\n\n    return (\n      <Sider className=\"sidebar\" width={250} style={{ background: '#fff' }}>\n        <ScrollView style={{ height: '100%', borderRight: 0 }}>\n          <div style={{ padding: 5, margin: 5 }}>\n            <Link to=\"/new\">\n              <Button onClick={this.onAddEntryClicked} type=\"dashed\" icon=\"plus\" size=\"small\" block>\n                Add New\n              </Button>\n            </Link>\n          </div>\n          <Menu\n            selectedKeys={[location.pathname]}\n            openKeys={activeSubMenuKeys}\n            style={{ borderRight: 0 }}\n            mode=\"inline\"\n            onClick={({ key }) => {\n              updateActiveEntry(getEntryIdFromPath(key));\n            }}\n          >\n            {items}\n          </Menu>\n        </ScrollView>\n      </Sider>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = store => ({\n  activeEntryId: store.activeEntry.entryId,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ updateActiveEntry: setActiveEntry }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Sidebar));\n","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport { getEntryById, getCategoryById } from '../database';\nimport { getEntryIdFromPath } from '../util';\nimport { setActiveEntry } from '../actions';\n\nfunction getItems(props) {\n  const { activeEntryId, location } = props;\n\n  const entryId = activeEntryId === -1 ? getEntryIdFromPath(location.pathname) : activeEntryId;\n  const entry = getEntryById(entryId);\n  const category = getCategoryById(entry ? entry.catId : 0);\n\n  console.log('activeEntryId: ', activeEntryId);\n\n  if (activeEntryId === -1) {\n    return [];\n  }\n\n  if (activeEntryId === 0) {\n    return [<Breadcrumb.Item key={2}>New Entry</Breadcrumb.Item>];\n  }\n\n  return [\n    <Breadcrumb.Item key={1}>{category ? category.name : 'Category'}</Breadcrumb.Item>,\n    <Breadcrumb.Item key={2}>{entry ? entry.name : 'Entry'}</Breadcrumb.Item>,\n  ];\n}\n\nclass LocationHeader extends React.Component {\n  componentDidMount() {\n    const { updateActiveEntry, activeEntryId, location } = this.props;\n\n    if (activeEntryId === -1) {\n      updateActiveEntry(getEntryIdFromPath(location.pathname));\n    }\n  }\n\n  render() {\n    const items = getItems(this.props);\n\n    return (\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n        {items}\n      </Breadcrumb>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  activeEntryId: store.activeEntry.entryId,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ updateActiveEntry: setActiveEntry }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LocationHeader));\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setActiveEntry } from '../actions';\n\nclass NewEntry extends React.Component {\n  componentDidMount() {\n    const { updateActiveEntry } = this.props;\n    updateActiveEntry(0);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>New Entry</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  activeEntryId: store.activeEntry.entryId,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ updateActiveEntry: setActiveEntry }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewEntry);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setActiveEntry } from '../actions';\n\nclass NotFound extends React.Component {\n  componentDidMount() {\n    const { updateActiveEntry } = this.props;\n    updateActiveEntry(-1);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Wops, not found!</h3>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  activeEntryId: store.activeEntry.entryId,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ updateActiveEntry: setActiveEntry }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NotFound);\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home, Sidebar, LocationHeader, EntryDetail, NewEntry, NotFound } from './components';\n\nconst { Content } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }}>\n        <Sidebar />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <LocationHeader />\n          <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/new\" component={NewEntry} />\n              <Route exact path=\"/entry/:entryId\" component={EntryDetail} />\n              <Route exact path=\"*\" component={NotFound} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { UPDATE_ACTIVE_ENTRY } from '../actions/actionTypes';\n\nconst initialState = {\n  entryId: -1,\n};\n\nconsole.log(initialState.entryId);\n\nconst activeEntryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ACTIVE_ENTRY:\n      return {\n        ...state,\n        entryId: action.entryId,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default activeEntryReducer;\n","import { combineReducers } from 'redux';\nimport activeEntryReducer from './activeEntryReducer';\n\nexport const Reducers = combineReducers({\n  activeEntry: activeEntryReducer,\n});\n","import { createStore } from 'redux';\nimport { Reducers } from '../reducers';\n\nconst Store = createStore(Reducers);\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}