{"version":3,"sources":["components/Home.js","components/EntryDetail.js","components/ScrollView.js","components/MenuEntry.js","components/MenuCategory.js","components/Sidebar.js","components/LocationHeader.js","components/NewEntry.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","EntryDetail","_ref","match","params","id","renderThumbVertical","className","style","backgroundColor","borderRadius","right","renderTrackVertical","position","width","bottom","top","ScrollView","props","children","otherProps","Object","objectWithoutProperties","lib","assign","autoHide","autoHideTimeout","autoHideDuration","MenuEntry","entry","menu","Item","react_router_dom","to","concat","catId","icon","type","name","defaultProps","SubMenu","MenuCategory","category","isSubMenuOpen","handleSubMenuClicked","folderIcon","subItems","entries","map","key","title","onTitleClick","Sider","Sidebar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","path","pathCategoryId","location","pathname","indexOf","parseInt","split","length","state","activeSubMenuKeys","bind","assertThisInitialized","onAddEntryClicked","setState","subMenuKey","prevState","push","splice","_this2","_this$props","menuItems","console","log","items","cat","unshift","disabled","background","height","borderRight","padding","margin","es_button","onClick","size","block","selectedKeys","openKeys","mode","React","Component","withRouter","LocationHeader","breadcrumb","NewEntry","Content","MenuItems","link","App","layout","components_Sidebar","minHeight","react_router","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4d82a94.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Home() {\n  return (\n    <div>\n      <p>Home</p>\n    </div>\n  );\n}\n","/* eslint react/prop-types: 0 */\n\nimport React from 'react';\n\nexport default function EntryDetail({ match }) {\n  return (\n    <div>\n      <p>Entry Detail for: {match.params.id}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { PropTypes } from 'prop-types';\n\nfunction renderThumbVertical() {\n  const thumbStyle = {\n    backgroundColor: `#7AB6E7`,\n    borderRadius: '5px',\n    right: '0px',\n  };\n  return <div className=\"custom-thumb\" style={thumbStyle} />;\n}\n\nfunction renderTrackVertical() {\n  const trackStyle = {\n    position: 'absolute',\n    width: '6px',\n    right: '0px',\n    bottom: '0px',\n    top: '0px',\n  };\n  return <div className=\"custom-track\" style={trackStyle} />;\n}\n\nexport default function ScrollView(props) {\n  const { style, children, ...otherProps } = props;\n\n  return (\n    <div style={style}>\n      <Scrollbars\n        autoHide\n        // * these are the default values\n        autoHideTimeout={1000} // *\n        autoHideDuration={200} // *\n        renderThumbVertical={renderThumbVertical}\n        renderTrackVertical={renderTrackVertical}\n        {...otherProps}\n      >\n        {children}\n      </Scrollbars>\n    </div>\n  );\n}\n\nScrollView.propTypes = {\n  style: PropTypes.shape({}),\n};\n\nScrollView.defaultProps = {\n  style: {},\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default function MenuEntry(props) {\n  const { entry, ...otherProps } = props;\n  return (\n    <Menu.Item {...otherProps}>\n      <NavLink to={`/entry/${entry.catId}/${entry.id}`}>\n        <Icon type=\"file-text\" /> {entry.name}\n      </NavLink>\n    </Menu.Item>\n  );\n}\n\nMenuEntry.propTypes = {\n  entry: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    catId: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport MenuEntry from './MenuEntry';\n\nconst { SubMenu } = Menu;\n\nexport default function MenuCategory(props) {\n  const { category, isSubMenuOpen, handleSubMenuClicked, ...otherProps } = props;\n  const folderIcon = isSubMenuOpen ? 'folder-open' : 'folder';\n  const subItems = category.entries.map(entry => {\n    return <MenuEntry key={`/entry/${entry.catId}/${entry.id}`} entry={entry} />;\n  });\n\n  return (\n    <SubMenu\n      title={\n        <span>\n          <Icon type={folderIcon} />\n          {category.name}\n        </span>\n      }\n      {...otherProps}\n      onTitleClick={() => handleSubMenuClicked(`c${category.id}`)}\n    >\n      {subItems}\n    </SubMenu>\n  );\n}\n\nMenuCategory.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        catId: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n  isSubMenuOpen: PropTypes.bool.isRequired,\n  handleSubMenuClicked: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Button, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport ScrollView from './ScrollView';\nimport MenuCategory from './MenuCategory';\n\nconst { Sider } = Layout;\n\nfunction getCategoryIdFromPath(path) {\n  return path.indexOf('entry') !== -1\n    ? parseInt(path.split('/')[[path.split('/').length - 2]], 10)\n    : 0;\n}\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const pathCategoryId = getCategoryIdFromPath(props.location.pathname);\n\n    this.state = {\n      activeSubMenuKeys: pathCategoryId !== 0 ? [`c${pathCategoryId}`] : [],\n    };\n\n    this.handleSubMenuClicked = this.handleSubMenuClicked.bind(this);\n    this.onAddEntryClicked = this.onAddEntryClicked.bind(this);\n  }\n\n  onAddEntryClicked() {\n    this.setState({ activeSubMenuKeys: [] });\n  }\n\n  handleSubMenuClicked(subMenuKey) {\n    this.setState(prevState => {\n      const { activeSubMenuKeys } = prevState;\n      const indexOf = activeSubMenuKeys.indexOf(subMenuKey);\n\n      if (indexOf === -1) {\n        activeSubMenuKeys.push(subMenuKey);\n      } else {\n        activeSubMenuKeys.splice(indexOf, 1);\n      }\n\n      return { activeSubMenuKeys };\n    });\n  }\n\n  render() {\n    const { activeSubMenuKeys } = this.state;\n    const { menuItems, location } = this.props;\n\n    console.log('activeSubMenuKeys', activeSubMenuKeys);\n\n    const items = menuItems.map(cat => {\n      const isSubMenuOpen = activeSubMenuKeys.indexOf(`c${cat.id}`) !== -1;\n\n      return (\n        <MenuCategory\n          key={`c${cat.id}`}\n          category={cat}\n          isSubMenuOpen={isSubMenuOpen}\n          handleSubMenuClicked={this.handleSubMenuClicked}\n        />\n      );\n    });\n\n    if (items.length === 0) {\n      items.unshift(\n        <Menu.Item disabled key=\"0\">\n          <Icon type=\"exclamation\" /> No entries found\n        </Menu.Item>\n      );\n    }\n\n    return (\n      <Sider className=\"sidebar\" width={250} style={{ background: '#fff' }}>\n        <ScrollView style={{ height: '100%', borderRight: 0 }}>\n          <div style={{ padding: 5, margin: 5 }}>\n            <Link to=\"/new\">\n              <Button onClick={this.onAddEntryClicked} type=\"dashed\" icon=\"plus\" size=\"small\" block>\n                Add New\n              </Button>\n            </Link>\n          </div>\n          <Menu\n            selectedKeys={[location.pathname]}\n            openKeys={activeSubMenuKeys}\n            style={{ borderRight: 0 }}\n            mode=\"inline\"\n          >\n            {items}\n          </Menu>\n        </ScrollView>\n      </Sider>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      entries: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          name: PropTypes.string.isRequired,\n          link: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ).isRequired,\n};\n\nexport default withRouter(Sidebar);\n","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nexport default function LocationHeader() {\n  return (\n    <Breadcrumb style={{ margin: '16px 0' }}>\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n      <Breadcrumb.Item>Category</Breadcrumb.Item>\n      <Breadcrumb.Item>Entry</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n}\n","import React from 'react';\n\nexport default function NewEntry() {\n  return (\n    <div>\n      <p>New Entry</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Home, Sidebar, LocationHeader, EntryDetail, NewEntry } from './components';\n\nconst { Content } = Layout;\n\nconst MenuItems = [\n  {\n    id: 1,\n    name: 'CategoryOne',\n    entries: [\n      {\n        id: 1,\n        catId: 1,\n        name: 'EntryOne',\n        link: 'one',\n      },\n      {\n        id: 2,\n        catId: 1,\n        name: 'EntryTwo',\n        link: 'two',\n      },\n      {\n        id: 3,\n        catId: 1,\n        name: 'EntryThree',\n        link: 'three',\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: 'CategoryTwo',\n    entries: [\n      {\n        id: 4,\n        catId: 2,\n        name: 'EntryFour',\n        link: 'four',\n      },\n      {\n        id: 5,\n        catId: 2,\n        name: 'EntryFive',\n        link: 'five',\n      },\n      {\n        id: 6,\n        catId: 2,\n        name: 'EntrySix',\n        link: 'six',\n      },\n    ],\n  },\n  {\n    id: 3,\n    name: 'CategoryThree',\n    entries: [\n      {\n        id: 7,\n        catId: 3,\n        name: 'EntrySeven',\n        link: 'seven',\n      },\n      {\n        id: 8,\n        catId: 3,\n        name: 'EntryEight',\n        link: 'eight',\n      },\n      {\n        id: 9,\n        catId: 3,\n        name: 'EntryNine',\n        link: 'nine',\n      },\n    ],\n  },\n];\n\nfunction App() {\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }}>\n        <Sidebar menuItems={MenuItems} />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <LocationHeader />\n          <Content style={{ background: '#fff', padding: 24, margin: 0, minHeight: 280 }}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/new\" component={NewEntry} />\n            <Route path=\"/entry/:cat/:id\" component={EntryDetail} />\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}